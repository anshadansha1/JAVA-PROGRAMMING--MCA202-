import javax.swing.*;
import java.awt.event.*;
import java.util.HashMap;
import java.util.Map;

public class Project_Hotel_anshad {
    private HotelManagementService hotelService = new HotelManagementService();
    private JTextField guestNameField, numOfGuestsField, reservationIdField, guestNameSearchField;

    public Project_Hotel_anshad() {
        // GUI initialization code
        JFrame frame = new JFrame("Hotel Management System");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 400);

        JPanel panel = new JPanel();
        panel.setLayout(null);

        JComboBox<String> mainMenu = new JComboBox<>(new String[]{"Make Reservation", "Cancel Reservation", "Find Room"});
        mainMenu.setBounds(20, 20, 200, 25);
        mainMenu.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedOption = (String) mainMenu.getSelectedItem();
                switch (selectedOption) {
                    case "Make Reservation":
                        createMakeReservationPanel();
                        break;
                    case "Cancel Reservation":
                        createCancelReservationPanel();
                        break;
                    case "Find Room":
                        createFindRoomPanel();
                        break;
                }
            }
        });
        panel.add(mainMenu);

        frame.add(panel);
        frame.setVisible(true);
    }

    private void createMakeReservationPanel() {
        JFrame makeReservationFrame = new JFrame("Make Reservation");
        makeReservationFrame.setSize(300, 200);
        makeReservationFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel panel = new JPanel();
        panel.setLayout(null);

        JLabel guestNameLabel = new JLabel("Guest Name:");
        guestNameLabel.setBounds(20, 20, 100, 25);
        panel.add(guestNameLabel);

        guestNameField = new JTextField();
        guestNameField.setBounds(120, 20, 150, 25);
        panel.add(guestNameField);

        JLabel numOfGuestsLabel = new JLabel("Number of Guests:");
        numOfGuestsLabel.setBounds(20, 50, 150, 25);
        panel.add(numOfGuestsLabel);

        numOfGuestsField = new JTextField();
        numOfGuestsField.setBounds(150, 50, 120, 25);
        panel.add(numOfGuestsField);

        JButton makeReservationButton = new JButton("Make Reservation");
        makeReservationButton.setBounds(80, 90, 150, 25);
        makeReservationButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String guestName = guestNameField.getText();
                int numOfGuests = Integer.parseInt(numOfGuestsField.getText());
                int reservationId = hotelService.addReservation(guestName, numOfGuests);
                JOptionPane.showMessageDialog(null, "Reservation made successfully. Reservation ID: " + reservationId);
            }
        });
        panel.add(makeReservationButton);

        makeReservationFrame.add(panel);
        makeReservationFrame.setVisible(true);
    }

    private void createCancelReservationPanel() {
        JFrame cancelReservationFrame = new JFrame("Cancel Reservation");
        cancelReservationFrame.setSize(300, 150);
        cancelReservationFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel panel = new JPanel();
        panel.setLayout(null);

        JLabel reservationIdLabel = new JLabel("Reservation ID:");
        reservationIdLabel.setBounds(20, 20, 100, 25);
        panel.add(reservationIdLabel);

        reservationIdField = new JTextField();
        reservationIdField.setBounds(120, 20, 150, 25);
        panel.add(reservationIdField);

        JButton cancelReservationButton = new JButton("Cancel Reservation");
        cancelReservationButton.setBounds(80, 60, 150, 25);
        cancelReservationButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int reservationId = Integer.parseInt(reservationIdField.getText());
                boolean canceled = hotelService.cancelReservation(reservationId);
                if (canceled) {
                    JOptionPane.showMessageDialog(null, "Reservation canceled successfully.");
                } else {
                    JOptionPane.showMessageDialog(null, "Reservation ID not found.");
                }
            }
        });
        panel.add(cancelReservationButton);

        cancelReservationFrame.add(panel);
        cancelReservationFrame.setVisible(true);
    }

    private void createFindRoomPanel() {
        JFrame findRoomFrame = new JFrame("Find Room");
        findRoomFrame.setSize(300, 150);
        findRoomFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel panel = new JPanel();
        panel.setLayout(null);

        JLabel guestNameSearchLabel = new JLabel("Guest Name:");
        guestNameSearchLabel.setBounds(20, 20, 100, 25);
        panel.add(guestNameSearchLabel);

        guestNameSearchField = new JTextField();
        guestNameSearchField.setBounds(120, 20, 150, 25);
        panel.add(guestNameSearchField);

        JButton findRoomButton = new JButton("Find Room");
        findRoomButton.setBounds(80, 60, 150, 25);
        findRoomButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String guestName = guestNameSearchField.getText();
                int reservationId = hotelService.findRoom(guestName);
                if (reservationId != -1) {
                    JOptionPane.showMessageDialog(null, "Room found for Guest " + guestName + ". Reservation ID: " + reservationId);
                } else {
                    JOptionPane.showMessageDialog(null, "No room found for Guest " + guestName);
                }
            }
        });
        panel.add(findRoomButton);

        findRoomFrame.add(panel);
        findRoomFrame.setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new Project_Hotel_anshad();
        });
    }
}

class HotelManagementService {
    private Map<Integer, Reservation> reservations;
    private int nextReservationId;

    public HotelManagementService() {
        this.reservations = new HashMap<>();
        this.nextReservationId = 1;
    }

    public int addReservation(String guestName, int numOfGuests) {
        int reservationId = nextReservationId++;
        Reservation reservation = new Reservation(reservationId, guestName, numOfGuests);
        reservations.put(reservationId, reservation);
        return reservationId;
    }

    public boolean cancelReservation(int reservationId) {
        return reservations.remove(reservationId) != null;
    }

    public int findRoom(String guestName) {
        for (Reservation reservation : reservations.values()) {
            if (reservation.getGuestName().equals(guestName)) {
                return reservation.getReservationId();
            }
        }
        return -1;
    }
}

class Reservation {
    private int reservationId;
    private String guestName;
    private int numOfGuests;

    public Reservation(int reservationId, String guestName, int numOfGuests) {
        this.reservationId = reservationId;
        this.guestName = guestName;
        this.numOfGuests = numOfGuests;
    }

    public int getReservationId() {
        return reservationId;
    }

    public String getGuestName() {
        return guestName;
    }

    public int getNumOfGuests() {
        return numOfGuests;
    }
}
